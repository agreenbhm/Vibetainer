# .github/workflows/android-beta-release.yml
name: Build & Release Android (Beta)

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Beta version tag (e.g. 1.4.0-beta.3)"
        required: true
      notes:
        description: "Release notes (markdown ok)"
        required: false
        default: ""

permissions:
  contents: write

jobs:
  build-release:
    runs-on: ubuntu-latest
    env:
      # Adjust if your module isn't "app"
      MODULE: app
      # Set SDK/API levels your project targets/compiles with
      ANDROID_COMPILE_SDK: "35"
      ANDROID_BUILD_TOOLS: "35.0.0"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Temurin JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
          cache: gradle

      - name: Install Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: ${{ env.ANDROID_COMPILE_SDK }}
          build-tools: ${{ env.ANDROID_BUILD_TOOLS }}

      - name: Gradle wrapper permissions
        run: chmod +x ./gradlew

      - name: Assemble Debug (fallback)
        run: ./gradlew :${MODULE}:clean :${MODULE}:assembleDebug

      - name: Locate APK
        id: apk
        run: |
          set -euo pipefail
          if [ -d "$MODULE/build/outputs/apk/release" ]; then
            APK=$(ls -1 "$MODULE/build/outputs/apk/release/"*.apk | head -n 1 || true)
          fi
          if [ -z "${APK:-}" ]; then
            APK=$(ls -1 "$MODULE/build/outputs/apk/debug/"*.apk | head -n 1)
          fi
          echo "path=$APK" >> "$GITHUB_OUTPUT"
          echo "Found APK: $APK"

      - name: Create Git tag (beta)
        run: |
          TAG="${{ inputs.version }}"
          git tag -a "$TAG" -m "Beta $TAG"
          git push origin "$TAG"

      - name: Publish GitHub Release (pre-release)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.version }}
          name: Beta ${{ inputs.version }}
          body: ${{ inputs.notes }}
          prerelease: true
          files: ${{ steps.apk.outputs.path }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}